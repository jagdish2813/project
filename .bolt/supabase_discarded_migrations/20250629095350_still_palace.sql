/*
  # Add Designer Quotes and Material Pricing

  1. New Tables
    - `designer_material_prices` - Store material pricing for designers
    - `designer_quotes` - Store quotes generated by designers
    - `quote_items` - Store individual items in quotes

  2. Security
    - Enable RLS on all tables
    - Add policies for designers to manage their own materials and quotes
    - Add policies for customers to view quotes for their projects
*/

-- Create designer material prices table
CREATE TABLE IF NOT EXISTS designer_material_prices (
  id uuid PRIMARY KEY DEFAULT gen_random_uuid(),
  designer_id uuid REFERENCES designers(id) ON DELETE CASCADE,
  category text NOT NULL,
  name text NOT NULL,
  description text,
  unit text NOT NULL,
  base_price numeric(10,2) NOT NULL,
  discount_price numeric(10,2),
  is_discounted boolean DEFAULT false,
  brand text,
  quality_grade text NOT NULL,
  is_available boolean DEFAULT true,
  created_at timestamptz DEFAULT now(),
  updated_at timestamptz DEFAULT now()
);

-- Create designer quotes table
CREATE TABLE IF NOT EXISTS designer_quotes (
  id uuid PRIMARY KEY DEFAULT gen_random_uuid(),
  designer_id uuid REFERENCES designers(id) ON DELETE CASCADE,
  project_id uuid REFERENCES customers(id) ON DELETE CASCADE,
  quote_number text NOT NULL,
  title text NOT NULL,
  description text,
  subtotal numeric(12,2) NOT NULL,
  discount_amount numeric(12,2) DEFAULT 0,
  tax_rate numeric(5,2) DEFAULT 18.0,
  tax_amount numeric(12,2) DEFAULT 0,
  total_amount numeric(12,2) NOT NULL,
  status text DEFAULT 'draft', -- 'draft', 'sent', 'accepted', 'rejected', 'expired'
  valid_until date,
  terms_and_conditions text,
  notes text,
  created_at timestamptz DEFAULT now(),
  updated_at timestamptz DEFAULT now()
);

-- Create quote items table
CREATE TABLE IF NOT EXISTS quote_items (
  id uuid PRIMARY KEY DEFAULT gen_random_uuid(),
  quote_id uuid REFERENCES designer_quotes(id) ON DELETE CASCADE,
  material_id uuid REFERENCES designer_material_prices(id) ON DELETE SET NULL,
  item_type text NOT NULL, -- 'material', 'labor', 'service', 'other'
  name text NOT NULL,
  description text,
  quantity numeric(10,2) NOT NULL,
  unit text NOT NULL,
  unit_price numeric(10,2) NOT NULL,
  discount_percent numeric(5,2) DEFAULT 0,
  amount numeric(12,2) NOT NULL,
  created_at timestamptz DEFAULT now()
);

-- Enable RLS
ALTER TABLE designer_material_prices ENABLE ROW LEVEL SECURITY;
ALTER TABLE designer_quotes ENABLE ROW LEVEL SECURITY;
ALTER TABLE quote_items ENABLE ROW LEVEL SECURITY;

-- Policies for designer_material_prices
CREATE POLICY "Designers can manage their own material prices"
  ON designer_material_prices
  FOR ALL
  TO authenticated
  USING (
    EXISTS (
      SELECT 1 FROM designers 
      WHERE designers.id = designer_material_prices.designer_id 
      AND designers.user_id = auth.uid()
    )
  )
  WITH CHECK (
    EXISTS (
      SELECT 1 FROM designers 
      WHERE designers.id = designer_material_prices.designer_id 
      AND designers.user_id = auth.uid()
    )
  );

CREATE POLICY "Public can read available material prices"
  ON designer_material_prices
  FOR SELECT
  TO anon, authenticated
  USING (
    is_available = true AND
    EXISTS (
      SELECT 1 FROM designers 
      WHERE designers.id = designer_material_prices.designer_id 
      AND designers.is_active = true
    )
  );

-- Policies for designer_quotes
CREATE POLICY "Designers can manage their own quotes"
  ON designer_quotes
  FOR ALL
  TO authenticated
  USING (
    EXISTS (
      SELECT 1 FROM designers 
      WHERE designers.id = designer_quotes.designer_id 
      AND designers.user_id = auth.uid()
    )
  )
  WITH CHECK (
    EXISTS (
      SELECT 1 FROM designers 
      WHERE designers.id = designer_quotes.designer_id 
      AND designers.user_id = auth.uid()
    )
  );

CREATE POLICY "Customers can view quotes for their projects"
  ON designer_quotes
  FOR SELECT
  TO authenticated
  USING (
    EXISTS (
      SELECT 1 FROM customers 
      WHERE customers.id = designer_quotes.project_id 
      AND customers.user_id = auth.uid()
    )
  );

-- Policies for quote_items
CREATE POLICY "Designers can manage their own quote items"
  ON quote_items
  FOR ALL
  TO authenticated
  USING (
    EXISTS (
      SELECT 1 FROM designer_quotes
      JOIN designers ON designers.id = designer_quotes.designer_id
      WHERE designer_quotes.id = quote_items.quote_id
      AND designers.user_id = auth.uid()
    )
  )
  WITH CHECK (
    EXISTS (
      SELECT 1 FROM designer_quotes
      JOIN designers ON designers.id = designer_quotes.designer_id
      WHERE designer_quotes.id = quote_items.quote_id
      AND designers.user_id = auth.uid()
    )
  );

CREATE POLICY "Customers can view quote items for their projects"
  ON quote_items
  FOR SELECT
  TO authenticated
  USING (
    EXISTS (
      SELECT 1 FROM designer_quotes
      JOIN customers ON customers.id = designer_quotes.project_id
      WHERE designer_quotes.id = quote_items.quote_id
      AND customers.user_id = auth.uid()
    )
  );

-- Trigger to automatically update updated_at
CREATE TRIGGER update_designer_material_prices_updated_at
  BEFORE UPDATE ON designer_material_prices
  FOR EACH ROW
  EXECUTE FUNCTION update_updated_at_column();

CREATE TRIGGER update_designer_quotes_updated_at
  BEFORE UPDATE ON designer_quotes
  FOR EACH ROW
  EXECUTE FUNCTION update_updated_at_column();

-- Create indexes for better performance
CREATE INDEX IF NOT EXISTS idx_designer_material_prices_designer_id 
ON designer_material_prices(designer_id);

CREATE INDEX IF NOT EXISTS idx_designer_material_prices_category 
ON designer_material_prices(category);

CREATE INDEX IF NOT EXISTS idx_designer_material_prices_name 
ON designer_material_prices(name);

CREATE INDEX IF NOT EXISTS idx_designer_quotes_designer_id 
ON designer_quotes(designer_id);

CREATE INDEX IF NOT EXISTS idx_designer_quotes_project_id 
ON designer_quotes(project_id);

CREATE INDEX IF NOT EXISTS idx_designer_quotes_status 
ON designer_quotes(status);

CREATE INDEX IF NOT EXISTS idx_quote_items_quote_id 
ON quote_items(quote_id);

CREATE INDEX IF NOT EXISTS idx_quote_items_material_id 
ON quote_items(material_id);

-- Insert sample data for testing
INSERT INTO designer_material_prices (
  designer_id,
  category,
  name,
  description,
  unit,
  base_price,
  discount_price,
  is_discounted,
  brand,
  quality_grade,
  is_available
) 
SELECT 
  id as designer_id,
  'Plywood & Boards' as category,
  'Marine Plywood' as name,
  'High-quality waterproof plywood made with phenolic resin, ideal for moisture-prone areas.' as description,
  'sq.ft' as unit,
  120 as base_price,
  100 as discount_price,
  true as is_discounted,
  'Century Ply' as brand,
  'Premium' as quality_grade,
  true as is_available
FROM designers
WHERE email = 'priya.sharma@interiorcraft.com'
LIMIT 1;

INSERT INTO designer_material_prices (
  designer_id,
  category,
  name,
  description,
  unit,
  base_price,
  discount_price,
  is_discounted,
  brand,
  quality_grade,
  is_available
) 
SELECT 
  id as designer_id,
  'Laminates & Veneers' as category,
  'High Pressure Laminate (HPL)' as name,
  'Durable decorative surface material made from multiple layers of kraft paper and resin.' as description,
  'sq.ft' as unit,
  85 as base_price,
  null as discount_price,
  false as is_discounted,
  'Merino' as brand,
  'Standard' as quality_grade,
  true as is_available
FROM designers
WHERE email = 'priya.sharma@interiorcraft.com'
LIMIT 1;

INSERT INTO designer_material_prices (
  designer_id,
  category,
  name,
  description,
  unit,
  base_price,
  discount_price,
  is_discounted,
  brand,
  quality_grade,
  is_available
) 
SELECT 
  id as designer_id,
  'Hardware' as category,
  'Soft Close Hinges' as name,
  'Premium cabinet hinges with hydraulic mechanism for smooth, silent closing.' as description,
  'per piece' as unit,
  350 as base_price,
  300 as discount_price,
  true as is_discounted,
  'Hettich' as brand,
  'Premium' as quality_grade,
  true as is_available
FROM designers
WHERE email = 'priya.sharma@interiorcraft.com'
LIMIT 1;